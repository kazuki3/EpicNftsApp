{"ast":null,"code":"var _jsxFileName = \"/Users/kazukiokayama/PrivateDevelop/ETH-NFT-collection/nft-collection-starter-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from \"./assets/twitter-logo.svg\";\nimport myEpicNft from './utils/MyEpicNFT.json'; // Constantsを宣言する: constとは値書き換えを禁止した変数を宣言する方法です。\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TWITTER_HANDLE = 'dokidoki_konbu';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = '';\nconst TOTAL_MINT_COUNT = 50;\n\nconst App = () => {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n  console.log(\"currentAccount: \", currentAccount);\n\n  const checkIfWalletIsConected = async () => {\n    const {\n      ethereum\n    } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask!\");\n      return;\n    } else {\n      console.log(\"We have the ethereum object\", ethereum);\n    }\n\n    const accounts = await ethereum.request({\n      method: \"eth_accounts\"\n    });\n\n    if (accounts.length !== 0) {\n      const account = accounts[0];\n      console.log(\"Found an authorized account:\", account);\n      setCurrentAccount(account);\n      setupEventListener();\n    } else {\n      console.log(\"No authorized account found\");\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"Get MetaMask!\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Connected\", accounts[0]);\n      setCurrentAccount(accounts[0]);\n      setupEventListener();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const setupEventListener = () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicNft.abi, signer); // Event が　emit される際に、コントラクトから送信される情報を受け取っています。\n\n        connectedContract.on(\"NewEpicNFTMinted\", (from, tokenId) => {\n          console.log(from, tokenId.toNumber());\n          alert(`あなたのウォレットに NFT を送信しました。OpenSea に表示されるまで最大で10分かかることがあります。NFT へのリンクはこちらです: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`);\n        });\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const askContractToMintNft = async () => {\n    const CONTRACT_ADDRESS = \"0xf7CDf131ADe33313C8CFF3609FC2dDE949099451\";\n\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (ethereum) {\n        const provider = new ethers.providers.Web3Provider(ethereum);\n        const signer = provider.getSigner();\n        const connectedContract = new ethers.Contract(CONTRACT_ADDRESS, myEpicNft.abi, signer);\n        console.log(\"Going to pop wallet now to pay gas...\");\n        let nftTxn = await connectedContract.makeAnEpicNFT();\n        console.log(\"Mining...please wait.\");\n        await nftTxn.wait();\n        console.log(`Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`);\n      } else {\n        console.log(\"Ethereum object doesn't exist!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const renderNotConnectedContainer = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: connectWallet,\n    className: \"cta-button connect-wallet-button\",\n    children: \"Connect to Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n\n  useEffect(() => checkIfWalletIsConected(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header gradient-text\",\n          children: \"My NFT Collection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sub-text\",\n          children: \"\\u3042\\u306A\\u305F\\u3060\\u3051\\u306E\\u7279\\u5225\\u306A NFT \\u3092 Mint \\u3057\\u3088\\u3046\\uD83D\\uDCAB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), currentAccount === \"\" ? renderNotConnectedContainer() : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: askContractToMintNft,\n          className: \"cta-button connect-wallet-button\",\n          children: \"Mint NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Twitter Logo\",\n          className: \"twitter-logo\",\n          src: twitterLogo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"footer-text\",\n          href: TWITTER_LINK,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: `built on @${TWITTER_HANDLE}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"Oez+vfH4X005OLgBo/Rzy9wdCKo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ethers","React","useEffect","useState","myEpicNft","TWITTER_HANDLE","TWITTER_LINK","OPENSEA_LINK","TOTAL_MINT_COUNT","App","currentAccount","setCurrentAccount","console","log","checkIfWalletIsConected","ethereum","window","accounts","request","method","length","account","setupEventListener","connectWallet","alert","error","provider","providers","Web3Provider","signer","getSigner","connectedContract","Contract","CONTRACT_ADDRESS","abi","on","from","tokenId","toNumber","askContractToMintNft","nftTxn","makeAnEpicNFT","wait","hash","renderNotConnectedContainer","twitterLogo"],"sources":["/Users/kazukiokayama/PrivateDevelop/ETH-NFT-collection/nft-collection-starter-project/src/App.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport './styles/App.css';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport myEpicNft from './utils/MyEpicNFT.json';\n\n// Constantsを宣言する: constとは値書き換えを禁止した変数を宣言する方法です。\nconst TWITTER_HANDLE = 'dokidoki_konbu';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\nconst OPENSEA_LINK = '';\nconst TOTAL_MINT_COUNT = 50;\n\nconst App = () => {\n    const [currentAccount, setCurrentAccount] = useState(\"\");\n    console.log(\"currentAccount: \", currentAccount);\n\n    const checkIfWalletIsConected = async () => {\n        const { ethereum } = window;\n        if (!ethereum) {\n            console.log(\"Make sure you have MetaMask!\");\n            return;\n          } else {\n            console.log(\"We have the ethereum object\", ethereum);\n        }\n\n        const accounts = await ethereum.request({ method: \"eth_accounts\" });\n\n        if (accounts.length !== 0) {\n            const account = accounts[0];\n            console.log(\"Found an authorized account:\", account);\n            setCurrentAccount(account);\n            setupEventListener();\n        } else {\n            console.log(\"No authorized account found\");\n        }\n    }\n\n    const connectWallet = async () => {\n        try {\n            const { ethereum } = window;\n            if (!ethereum) {\n                alert(\"Get MetaMask!\");\n                return;\n            }\n\n            const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n            console.log(\"Connected\", accounts[0]);\n            setCurrentAccount(accounts[0]);\n\n            setupEventListener();\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const   setupEventListener = () => {\n        try {\n            const { ethereum } = window;\n            if (ethereum) {\n                const provider = new ethers.providers.Web3Provider(ethereum);\n                const signer = provider.getSigner();\n                const connectedContract = new ethers.Contract(\n                  CONTRACT_ADDRESS,\n                  myEpicNft.abi,\n                  signer\n                );\n                // Event が　emit される際に、コントラクトから送信される情報を受け取っています。\n                connectedContract.on(\"NewEpicNFTMinted\", (from, tokenId) => {\n                  console.log(from, tokenId.toNumber());\n                  alert(\n                    `あなたのウォレットに NFT を送信しました。OpenSea に表示されるまで最大で10分かかることがあります。NFT へのリンクはこちらです: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`\n                  );\n                });\n            } else {\n                console.log(\"Ethereum object doesn't exist!\");\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const askContractToMintNft = async () => {\n        const CONTRACT_ADDRESS = \"0xf7CDf131ADe33313C8CFF3609FC2dDE949099451\";\n        try {\n            const { ethereum } = window;\n            if (ethereum) {\n                const provider = new ethers.providers.Web3Provider(ethereum);\n                const signer = provider.getSigner();\n                const connectedContract = new ethers.Contract(\n                  CONTRACT_ADDRESS,\n                  myEpicNft.abi,\n                  signer\n                );\n                console.log(\"Going to pop wallet now to pay gas...\");\n                let nftTxn = await connectedContract.makeAnEpicNFT();\n                console.log(\"Mining...please wait.\");\n                await nftTxn.wait();\n                console.log(\n                    `Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`\n                  );\n            } else {\n                console.log(\"Ethereum object doesn't exist!\");\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const renderNotConnectedContainer = () => (\n        <button  onClick={ connectWallet } className=\"cta-button connect-wallet-button\">\n        Connect to Wallet\n        </button>\n    );\n\n    useEffect(() => checkIfWalletIsConected(), []);\n\n    return (\n        <div className=\"App\">\n        <div className=\"container\">\n            <div className=\"header-container\">\n            <p className=\"header gradient-text\">My NFT Collection</p>\n            <p className=\"sub-text\">\n                あなただけの特別な NFT を Mint しよう💫\n            </p>\n            {currentAccount === \"\" ? (\n                renderNotConnectedContainer()\n            ) : (\n                <button onClick={askContractToMintNft} className=\"cta-button connect-wallet-button\">\n                Mint NFT\n                </button>\n            )}\n            </div>\n            <div className=\"footer-container\">\n            <img alt=\"Twitter Logo\" className=\"twitter-logo\" src={twitterLogo} />\n            <a\n                className=\"footer-text\"\n                href={TWITTER_LINK}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n            >{`built on @${TWITTER_HANDLE}`}</a>\n            </div>\n        </div>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}